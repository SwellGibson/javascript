/*
SIMPLE 'TODO' APPLICATION
A simple JavaScript application
Adam Hall

This application is a simple 'TODO' list that allows the user
to store, display, change and delete a list of tasks.

Used as an exercise for coding practices and the development process.  

*/

///////////////

//VERSION 1

//store
//display
//add new
//change
//delete

//store
	var todos = ['item 1', 'item 2', 'item 3']

//display
	console.log('My Todos:', todos)

//add new 
	todos.push('item 4')

//change
	todos[0] = 'item 1 updated' 

//delete
	todos.splice(0, 1) //todos.splice(starting location, number of deletes)

///////////////

//VERSION 2

//store
//display
//add new
//change
//delete

//store
	var todos = ['item 1', 'item 2', 'item 3']

//display
	function displayTodos() {
		console.log('My todos:', todos);
	}
	displayTodos()

//add new
	function addTodo(todo) {
		todos.push(todo);
		displayTodos();
	}

//change
	function changeTodo(position, newValue) {	
	todos[position] = newValue;	
	displayTodos();	
	}

//delete
	deleteTodo(position) {
	todos.splice(position, 1);
	displayTodos(); 
	}	

///////////////
/*
VERSION 3

- store todos array on object
- displayTodos method
- addTodo method
- changeTodo method
- deleteTodo method
*/

// OBJECT
var todoList = {
  todos: ['item 1', 'item 2', 'item 3'],        //store
  
  displayTodos: function() {                    //display
    console.log('My Todos:', this.todos);
  },
  
  addTodo: function(todo) {                     //add
    this.todos.push(todo);
    this.displayTodos();
  },
  
  changeTodo: function(position, newValue) {    //change
    this.todos[position] = newValue;
    this.displayTodos();
  },
  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  }
};

///////////////
/*
VERSION 4

- todoList.addTodo should add objects
- todoList.changeTodo should change the todoText property
- todoList.toggleCompleted should change the completed property
*/

// OBJECT
var todoList = {
  todos: [],                                    //store  
  displayTodos: function() {                    //display
    console.log('My Todos:', this.todos);
  },  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
    this.displayTodos();
  },  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  },  
  toggleCompleted: function(position){
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  }
};

///////////////
/*
VERSION 5

- todoList.displayTodos should show .todoText
- todoList.displayTodos should tell you if .todos is empty
- todoList.displayTodos should show .completed
*/

// OBJECT
var todoList = {
  todos: [],        //store
  displayTodos: function() {                    //display
    if (this.todos.length === 0) {
      console.log('Your todo list is empty!');
    } else {
      console.log('My Todos:');
      for (var i = 0; i < this.todos.length; i++) {
        if (this.todos[i].completed === true) {
          console.log('(x)', this.todos[i].todoText);
        } else {
          console.log('( )', this.todos[i].todoText);
        }
      }
    }
  },  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
    this.displayTodos();
  },  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  },  
  toggleCompleted: function(position){
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  }
};

///////////////
/*
VERSION 6

- todoList.toggleAll: If everything is true, make everything false
- todoList.toggleAll: Otherwise, make everything true
*/
// OBJECT
var todoList = {
  todos: [],        //store
  displayTodos: function() {                    //display
    if (this.todos.length === 0) {
      console.log('Your todo list is empty!');
    } else {
      console.log('My Todos:');
      for (var i = 0; i < this.todos.length; i++) {
        if (this.todos[i].completed === true) {
          console.log('(x)', this.todos[i].todoText);
        } else {
          console.log('( )', this.todos[i].todoText);
        }
      }
    }
  },
  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
    this.displayTodos();
  },  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  },  
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  },  
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    //Get number of completed todos
    for (var i = 0; i < totalTodos; i++) {
      if(this.todos[i].completed === true ){
        completedTodos++;
      }
    }
    //Case 1: If everything is true, make everything false
    if (completedTodos === totalTodos) {
      for (var i = 0; i < totalTodos; i++) {
        this.todos[i].completed = false;
      }
    //Case 2: Otherwise, make everything true
    } else {
      for (var i =0 ; i < totalTodos; i++){
        this.todos[i].completed = true;
      }
    }    
    this.displayTodos();
  }
};

///////////////
/*
VERSION 7
- 'Display todos' and 'Toggle all' buttons in app
- Clicking 'Display todos' should run todoList.displayTodos
- Clicking 'Toggle all' should run todoList.toggleAll
*/
// OBJECT
var todoList = {
  todos: [],        //store
  displayTodos: function() {                    //display
    if (this.todos.length === 0) {
      console.log('Your todo list is empty!');
    } else {
      console.log('My Todos:');
      for (var i = 0; i < this.todos.length; i++) {
        if (this.todos[i].completed === true) {
          console.log('(x)', this.todos[i].todoText);
        } else {
          console.log('( )', this.todos[i].todoText);
        }
      }
    }
  },
  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },
  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
    this.displayTodos();
  },
  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  },
  
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  },
  
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    //Get number of completed todos
    for (var i = 0; i < totalTodos; i++) {
      if(this.todos[i].completed === true ){
        completedTodos++;
      }
    }
    //Case 1: If everything is true, make everything false
    if (completedTodos === totalTodos) {
      for (var i = 0; i < totalTodos; i++) {
        this.todos[i].completed = false;
      }
    //Case 2: Otherwise, make everything true
    } else {
      for (var i =0 ; i < totalTodos; i++){
        this.todos[i].completed = true;
      }
    }
    
    this.displayTodos();
  }
};

var displayTodosButton = document.getElementById('displayTodosButton');
var toggleAllButton = document.getElementById('toggleAllButton');

// Add eventListner for click events
displayTodosButton.addEventListener('click', function() {
  todoList.displayTodos();
});

toggleAllButton.addEventListener('click', function() {
  todoList.toggleAll();
});

///////////////
/*
VERSION 8
- Working controls for .addTodo
- Working controls for .changeTodo
- Working controls for .deleteTodo
- Working controls for .toggleCompleted
*/
// OBJECT
var todoList = {
  todos: [],        //store
  displayTodos: function() {                    //display
    if (this.todos.length === 0) {
      console.log('Your todo list is empty!');
    } else {
      console.log('My Todos:');
      for (var i = 0; i < this.todos.length; i++) {
        if (this.todos[i].completed === true) {
          console.log('(x)', this.todos[i].todoText);
        } else {
          console.log('( )', this.todos[i].todoText);
        }
      }
    }
  },
  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
    this.displayTodos();
  },
  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
    this.displayTodos();
  },
  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete
    this.displayTodos();
  },
  
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
    this.displayTodos();
  },
  
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    //Get number of completed todos
    for (var i = 0; i < totalTodos; i++) {
      if(this.todos[i].completed === true ){
        completedTodos++;
      }
    }
    //Case 1: If everything is true, make everything false
    if (completedTodos === totalTodos) {
      for (var i = 0; i < totalTodos; i++) {
        this.todos[i].completed = false;
      }
    //Case 2: Otherwise, make everything true
    } else {
      for (var i =0 ; i < totalTodos; i++){
        this.todos[i].completed = true;
      }
    }
    
    this.displayTodos();
  }
};

var handlers = {
  displayTodos: function() {
    todoList.displayTodos();
  },
  addTodo: function() {
    var addTodoTextInput = document.getElementById('addTodoTextInput');
    todoList.addTodo(addTodoTextInput.value);
    addTodoTextInput.value='';
  },
  changeTodo: function() {
    var changeTodoPositionInput = document.getElementById('changeTodoPositionInput');
    var changeTodoTextInput = document.getElementById('changeTodoTextInput');
    todoList.changeTodo(changeTodoPositionInput.valueAsNumber, changeTodoTextInput.value);
    changeTodoPositionInput.value='';
    changeTodoTextInput.value='';
  },
  deleteTodo: function() {
    var deleteTodoPositionInput = document.getElementById('deleteTodoPositionInput');
    todoList.deleteTodo(deleteTodoPositionInput.valueAsNumber);
    deleteTodoPositionInput.value = '';
  },
  toggleCompleted: function() {
    var toggleCompletedPositionInput = document.getElementById('toggleCompletedPositionInput');
    todoList.toggleCompleted(toggleCompletedPositionInput.valueAsNumber);
    toggleCompletedPositionInput.value = '';
  },
  toggleAll: function() {
    todoList.toggleAll();
  }
};

///////////////
/*
VERSION 9
- Should be an li element for every todo
- Each li element should contain .todoText
- Each li element should show .completed
*/


// OBJECT
var todoList = {
  todos: [],  
  addTodo: function(todoText) {                 //add
    this.todos.push({
      todoText: todoText,
      completed: false
    });
  },
  
  changeTodo: function(position, todoText) {    //change
    this.todos[position].todoText = todoText;
  },
  
  deleteTodo: function(position) {
    this.todos.splice(position, 1);             //delete);
  },
  
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
  },
  
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    //Get number of completed todos
    for (var i = 0; i < totalTodos; i++) {
      if(this.todos[i].completed === true ){
        completedTodos++;
      }
    }
    //Case 1: If everything is true, make everything false
    if (completedTodos === totalTodos) {
      for (var i = 0; i < totalTodos; i++) {
        this.todos[i].completed = false;
      }
    //Case 2: Otherwise, make everything true
    } else {
      for (var i =0 ; i < totalTodos; i++){
        this.todos[i].completed = true;
      }
    }
  }
};

var handlers = {
  addTodo: function() {
    var addTodoTextInput = document.getElementById('addTodoTextInput');
    todoList.addTodo(addTodoTextInput.value);
    addTodoTextInput.value='';
    view.displayTodos();
  },
  changeTodo: function() {
    var changeTodoPositionInput = document.getElementById('changeTodoPositionInput');
    var changeTodoTextInput = document.getElementById('changeTodoTextInput');
    todoList.changeTodo(changeTodoPositionInput.valueAsNumber, changeTodoTextInput.value);
    changeTodoPositionInput.value='';
    changeTodoTextInput.value='';
    view.displayTodos();
  },
  deleteTodo: function() {
    var deleteTodoPositionInput = document.getElementById('deleteTodoPositionInput');
    todoList.deleteTodo(deleteTodoPositionInput.valueAsNumber);
    deleteTodoPositionInput.value = '';
    view.displayTodos();
  },
  toggleCompleted: function() {
    var toggleCompletedPositionInput = document.getElementById('toggleCompletedPositionInput');
    todoList.toggleCompleted(toggleCompletedPositionInput.valueAsNumber);
    toggleCompletedPositionInput.value = '';
    view.displayTodos();
  },
  toggleAll: function() {
    todoList.toggleAll();
    view.displayTodos();
  }
};

var view = {
  displayTodos() {
    var todosUl = document.querySelector('ul');
    todosUl.innerHTML = '';
    for(var i = 0; i < todoList.todos.length; i++) {
      var todoLi = document.createElement('li');
      var todo = todoList.todos[i];
      var todoTextWithCompletion = '';
      
      if (todo.completed === true) {
        todoTextWithCompletion = '(x) ' + todo.todoText;
      } else {
        todoTextWithCompletion = '( ) ' + todo.todoText;
      }
      todoLi.textContent = todoTextWithCompletion;
      todosUl.appendChild(todoLi);
    }
  }
};
